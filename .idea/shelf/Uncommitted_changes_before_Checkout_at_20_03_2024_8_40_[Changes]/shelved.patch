Index: master.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.10 (machine learning)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
===================================================================
diff --git a/master.iml b/master.iml
--- a/master.iml	
+++ b/master.iml	
@@ -3,7 +3,7 @@
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.10 (machine learning)" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.11" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: main.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 63,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"# import statements\\n\",\r\n    \"import numpy as np\\n\",\r\n    \"import pandas as pd\\n\",\r\n    \"import tensorflow as tf\\n\",\r\n    \"from tensorflow.keras import datasets, layers, models\\n\",\r\n    \"import matplotlib.pyplot as plt\\n\",\r\n    \"from sklearn.preprocessing import LabelEncoder\\n\",\r\n    \"from sklearn.model_selection import train_test_split\\n\",\r\n    \"\\n\",\r\n    \"import glob\\n\",\r\n    \"import os\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-03-19T15:04:40.878789900Z\",\r\n     \"start_time\": \"2024-03-19T15:04:40.844629700Z\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 64,\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"0                                     Frame\\n\",\r\n      \"1              Elapsed_Time_In_Milliseconds\\n\",\r\n      \"2                                      Time\\n\",\r\n      \"3                                    Hand_X\\n\",\r\n      \"4                                    Hand_Y\\n\",\r\n      \"                       ...                 \\n\",\r\n      \"362       Ring_DIP_Flex_AngularAcceleration\\n\",\r\n      \"363    Pinky_MCP_Spread_AngularAcceleration\\n\",\r\n      \"364      Pinky_MCP_Flex_AngularAcceleration\\n\",\r\n      \"365      Pinky_PIP_Flex_AngularAcceleration\\n\",\r\n      \"366      Pinky_DIP_Flex_AngularAcceleration\\n\",\r\n      \"Name: 0, Length: 367, dtype: object\\n\",\r\n      \"0                 0\\n\",\r\n      \"1                 0\\n\",\r\n      \"2      00:00:00:000\\n\",\r\n      \"3                 0\\n\",\r\n      \"4                 0\\n\",\r\n      \"           ...     \\n\",\r\n      \"362        37274,14\\n\",\r\n      \"363       -46771,95\\n\",\r\n      \"364        27792,87\\n\",\r\n      \"365        87709,06\\n\",\r\n      \"366        83074,34\\n\",\r\n      \"Name: 1, Length: 367, dtype: object\\n\",\r\n      \"The input shape of your array is: (283, 367)\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"\\n\",\r\n    \"\\n\",\r\n    \"# importing a sample\\n\",\r\n    \"arr = pd.read_csv('testWave005_mijn35_R001.csv', header=None, delimiter=\\\";\\\")\\n\",\r\n    \"# check the shape\\n\",\r\n    \"input_shape = arr.shape\\n\",\r\n    \"print(arr.iloc[0])\\n\",\r\n    \"print(arr.iloc[1])\\n\",\r\n    \"print(f\\\"The input shape of your array is: {input_shape}\\\")\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-03-19T15:04:41.421372100Z\",\r\n     \"start_time\": \"2024-03-19T15:04:41.362626200Z\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 65,\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"max length is 315\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"folder_path = 'csv_letters/*.csv'\\n\",\r\n    \"x = []\\n\",\r\n    \"y = []\\n\",\r\n    \"\\n\",\r\n    \"# Example class names\\n\",\r\n    \"class_names = [\\\"letterA\\\", \\\"letterB\\\", \\\"letterC\\\",\\\"letterD\\\",\\\"letterE\\\",\\\"letterF\\\",\\\"letterG\\\",\\\"letterH\\\",\\\"letterI\\\",\\\"letterK\\\",\\\"letterL\\\",\\\"letterM\\\",\\\"letterN\\\",\\\"letterO\\\",\\\"letterP\\\",\\\"letterQ\\\",\\\"letterR\\\",\\\"letterS\\\",\\\"letterT\\\",\\\"letterU\\\",\\\"letterV\\\",\\\"letterW\\\",\\\"letterX\\\",\\\"letterY\\\"]\\n\",\r\n    \"\\n\",\r\n    \"# Create a dictionary mapping class names to numerical labels\\n\",\r\n    \"class_to_label = {class_name: label for label, class_name in enumerate(class_names)}\\n\",\r\n    \"# Use glob to get all the csv files in the folder\\n\",\r\n    \"csv_files = glob.glob(folder_path)\\n\",\r\n    \"\\n\",\r\n    \"# Initialize an empty list to store the combined DataFrames\\n\",\r\n    \"combined_dataframes = []\\n\",\r\n    \"max_len = 0\\n\",\r\n    \"for i in range(1, len(csv_files), 2):\\n\",\r\n    \"    # Read the first file into a DataFrame\\n\",\r\n    \"    df1 = pd.read_csv(csv_files[i], header=0, delimiter=\\\";\\\", usecols=list(range(0,2))+list(range(3,367)), decimal=',')\\n\",\r\n    \"    if (len(df1)>max_len):\\n\",\r\n    \"        max_len = len(df1)\\n\",\r\n    \"print(f\\\"max length is {max_len}\\\")\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-03-19T15:04:46.046875200Z\",\r\n     \"start_time\": \"2024-03-19T15:04:42.101527200Z\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 66,\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\",\r\n      \"Shape of combined_df: (315, 732)\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"\\n\",\r\n    \"# Iterate over the files two by two\\n\",\r\n    \"for i in range(1, len(csv_files), 2):\\n\",\r\n    \"    # Read the first file into a DataFrame\\n\",\r\n    \"    df1 = pd.read_csv(csv_files[i], header=0, delimiter=\\\";\\\", usecols=list(range(0,2))+list(range(3,367)), decimal=',')\\n\",\r\n    \"    # Get the shape of df1\\n\",\r\n    \"    # print(f\\\"Shape of df1: {df1.shape}\\\")\\n\",\r\n    \"\\n\",\r\n    \"    #get the class and add it to y\\n\",\r\n    \"    name = os.path.splitext(csv_files[i])\\n\",\r\n    \"    classtype = name[0].split('\\\\\\\\')[1][:7] #this takes letterX from the title\\n\",\r\n    \"    numerical_label = class_to_label.get(classtype, -1)  # -1 if not found\\n\",\r\n    \"    if numerical_label != -1:\\n\",\r\n    \"        y.append(numerical_label)\\n\",\r\n    \"    else:\\n\",\r\n    \"        print(\\\"failed to add to y: \\\" + classtype)\\n\",\r\n    \"\\n\",\r\n    \"    # If there is a next file, read it and combine with the first\\n\",\r\n    \"    if i+1 < len(csv_files):\\n\",\r\n    \"        df2 = pd.read_csv(csv_files[i+1], header=0, delimiter=\\\";\\\", usecols=list(range(0,2))+list(range(3,367)), decimal=',')\\n\",\r\n    \"        df2 = df2.add_prefix('right_')\\n\",\r\n    \"    else:\\n\",\r\n    \"        # If there is no next file, create an empty DataFrame with the same columns as df1\\n\",\r\n    \"        df2 = pd.DataFrame(columns=df1.columns)\\n\",\r\n    \"\\n\",\r\n    \"    # Ensure that both DataFrames have the same number of rows by filling NaN values in df2\\n\",\r\n    \"    if len(df1) > len(df2):\\n\",\r\n    \"        df2 = df2.reindex(df1.index, fill_value=np.nan)\\n\",\r\n    \"    elif len(df2) > len(df1):\\n\",\r\n    \"        df1 = df1.reindex(df2.index, fill_value=np.nan)\\n\",\r\n    \"\\n\",\r\n    \"    # Concatenate the DataFrames\\n\",\r\n    \"    combined_df = pd.concat([df1, df2], axis=1)\\n\",\r\n    \"    combined_df = combined_df.reindex(range(max_len)).fillna(0)\\n\",\r\n    \"    # Print the shape of combined_df\\n\",\r\n    \"    print(f\\\"Shape of combined_df: {combined_df.shape}\\\")\\n\",\r\n    \"    combined_dataframes.append(combined_df)\\n\",\r\n    \"\\n\",\r\n    \"# Convert the list of DataFrames to a NumPy array\\n\",\r\n    \"x = np.array(combined_dataframes)\\n\",\r\n    \"x = np.asarray(x).astype('float32') # meant to fix an error when training the model\\n\",\r\n    \"y = np.array(y)\\n\",\r\n    \"\\n\",\r\n    \"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)\\n\",\r\n    \"\\n\",\r\n    \"# print(x)\\n\",\r\n    \"# print(y)\\n\",\r\n    \"\\n\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-03-19T15:04:52.946976100Z\",\r\n     \"start_time\": \"2024-03-19T15:04:46.052831800Z\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 67,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"model = models.Sequential()\\n\",\r\n    \"model.add(layers.Conv1D(64, 3, activation='relu', input_shape=(315,732)))\\n\",\r\n    \"model.add(layers.MaxPooling1D(2))\\n\",\r\n    \"model.add(layers.Conv1D(128, 3, activation='relu'))\\n\",\r\n    \"model.add(layers.MaxPooling1D(2))\\n\",\r\n    \"model.add(layers.Conv1D(128, 3, activation='relu'))\\n\",\r\n    \"model.add(layers.Flatten())\\n\",\r\n    \"model.add(layers.Dense(128, activation='relu'))\\n\",\r\n    \"model.add(layers.Dense(64, activation='relu'))\\n\",\r\n    \"model.add(layers.Dense(24, activation='softmax'))\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-03-19T15:04:53.041096800Z\",\r\n     \"start_time\": \"2024-03-19T15:04:52.955488300Z\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 68,\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Model: \\\"sequential_6\\\"\\n\",\r\n      \"_________________________________________________________________\\n\",\r\n      \" Layer (type)                Output Shape              Param #   \\n\",\r\n      \"=================================================================\\n\",\r\n      \" conv1d_18 (Conv1D)          (None, 313, 64)           140608    \\n\",\r\n      \"                                                                 \\n\",\r\n      \" max_pooling1d_12 (MaxPoolin  (None, 156, 64)          0         \\n\",\r\n      \" g1D)                                                            \\n\",\r\n      \"                                                                 \\n\",\r\n      \" conv1d_19 (Conv1D)          (None, 154, 128)          24704     \\n\",\r\n      \"                                                                 \\n\",\r\n      \" max_pooling1d_13 (MaxPoolin  (None, 77, 128)          0         \\n\",\r\n      \" g1D)                                                            \\n\",\r\n      \"                                                                 \\n\",\r\n      \" conv1d_20 (Conv1D)          (None, 75, 128)           49280     \\n\",\r\n      \"                                                                 \\n\",\r\n      \" flatten_6 (Flatten)         (None, 9600)              0         \\n\",\r\n      \"                                                                 \\n\",\r\n      \" dense_18 (Dense)            (None, 128)               1228928   \\n\",\r\n      \"                                                                 \\n\",\r\n      \" dense_19 (Dense)            (None, 64)                8256      \\n\",\r\n      \"                                                                 \\n\",\r\n      \" dense_20 (Dense)            (None, 24)                1560      \\n\",\r\n      \"                                                                 \\n\",\r\n      \"=================================================================\\n\",\r\n      \"Total params: 1,453,336\\n\",\r\n      \"Trainable params: 1,453,336\\n\",\r\n      \"Non-trainable params: 0\\n\",\r\n      \"_________________________________________________________________\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"model.summary()\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-03-19T15:04:53.102603900Z\",\r\n     \"start_time\": \"2024-03-19T15:04:53.044095100Z\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 69,\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"58797900\\n\",\r\n      \"255\\n\",\r\n      \"Epoch 1/50\\n\",\r\n      \"7/7 [==============================] - 1s 33ms/step - loss: 729.7145 - accuracy: 0.0539\\n\",\r\n      \"Epoch 2/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 114.8136 - accuracy: 0.1373\\n\",\r\n      \"Epoch 3/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 29.7235 - accuracy: 0.2941\\n\",\r\n      \"Epoch 4/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 11.9651 - accuracy: 0.4412\\n\",\r\n      \"Epoch 5/50\\n\",\r\n      \"7/7 [==============================] - 0s 26ms/step - loss: 5.0993 - accuracy: 0.5686\\n\",\r\n      \"Epoch 6/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 2.2543 - accuracy: 0.7451\\n\",\r\n      \"Epoch 7/50\\n\",\r\n      \"7/7 [==============================] - 0s 27ms/step - loss: 0.7723 - accuracy: 0.8235\\n\",\r\n      \"Epoch 8/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 0.4837 - accuracy: 0.8824\\n\",\r\n      \"Epoch 9/50\\n\",\r\n      \"7/7 [==============================] - 0s 27ms/step - loss: 0.3388 - accuracy: 0.9314\\n\",\r\n      \"Epoch 10/50\\n\",\r\n      \"7/7 [==============================] - 0s 27ms/step - loss: 0.2218 - accuracy: 0.9412\\n\",\r\n      \"Epoch 11/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 0.1962 - accuracy: 0.9461\\n\",\r\n      \"Epoch 12/50\\n\",\r\n      \"7/7 [==============================] - 0s 28ms/step - loss: 0.0671 - accuracy: 0.9657\\n\",\r\n      \"Epoch 13/50\\n\",\r\n      \"7/7 [==============================] - 0s 27ms/step - loss: 0.0222 - accuracy: 0.9951\\n\",\r\n      \"Epoch 14/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 0.0135 - accuracy: 1.0000\\n\",\r\n      \"Epoch 15/50\\n\",\r\n      \"7/7 [==============================] - 0s 27ms/step - loss: 0.0055 - accuracy: 1.0000\\n\",\r\n      \"Epoch 16/50\\n\",\r\n      \"7/7 [==============================] - 0s 36ms/step - loss: 0.0040 - accuracy: 1.0000\\n\",\r\n      \"Epoch 17/50\\n\",\r\n      \"7/7 [==============================] - 0s 28ms/step - loss: 0.0029 - accuracy: 1.0000\\n\",\r\n      \"Epoch 18/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 0.0021 - accuracy: 1.0000\\n\",\r\n      \"Epoch 19/50\\n\",\r\n      \"7/7 [==============================] - 0s 28ms/step - loss: 0.0017 - accuracy: 1.0000\\n\",\r\n      \"Epoch 20/50\\n\",\r\n      \"7/7 [==============================] - 0s 28ms/step - loss: 0.0015 - accuracy: 1.0000\\n\",\r\n      \"Epoch 21/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 0.0013 - accuracy: 1.0000\\n\",\r\n      \"Epoch 22/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 0.0012 - accuracy: 1.0000\\n\",\r\n      \"Epoch 23/50\\n\",\r\n      \"7/7 [==============================] - 0s 38ms/step - loss: 0.0011 - accuracy: 1.0000\\n\",\r\n      \"Epoch 24/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 0.0010 - accuracy: 1.0000\\n\",\r\n      \"Epoch 25/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 9.5850e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 26/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 9.1119e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 27/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 8.5369e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 28/50\\n\",\r\n      \"7/7 [==============================] - 0s 31ms/step - loss: 8.1100e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 29/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 7.7187e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 30/50\\n\",\r\n      \"7/7 [==============================] - 0s 34ms/step - loss: 7.3682e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 31/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 7.1017e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 32/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 6.8161e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 33/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 6.5693e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 34/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 6.3272e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 35/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 6.0986e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 36/50\\n\",\r\n      \"7/7 [==============================] - 0s 31ms/step - loss: 5.9122e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 37/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 5.7470e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 38/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 5.5444e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 39/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 5.3811e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 40/50\\n\",\r\n      \"7/7 [==============================] - 0s 31ms/step - loss: 5.2292e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 41/50\\n\",\r\n      \"7/7 [==============================] - 0s 29ms/step - loss: 5.0643e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 42/50\\n\",\r\n      \"7/7 [==============================] - 0s 31ms/step - loss: 4.9022e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 43/50\\n\",\r\n      \"7/7 [==============================] - 0s 43ms/step - loss: 4.7671e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 44/50\\n\",\r\n      \"7/7 [==============================] - 0s 30ms/step - loss: 4.6216e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 45/50\\n\",\r\n      \"7/7 [==============================] - 0s 31ms/step - loss: 4.5164e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 46/50\\n\",\r\n      \"7/7 [==============================] - 0s 31ms/step - loss: 4.3921e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 47/50\\n\",\r\n      \"7/7 [==============================] - 0s 32ms/step - loss: 4.2789e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 48/50\\n\",\r\n      \"7/7 [==============================] - 0s 31ms/step - loss: 4.1776e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 49/50\\n\",\r\n      \"7/7 [==============================] - 0s 32ms/step - loss: 4.0756e-04 - accuracy: 1.0000\\n\",\r\n      \"Epoch 50/50\\n\",\r\n      \"7/7 [==============================] - 1s 92ms/step - loss: 3.9601e-04 - accuracy: 1.0000\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"model.compile(optimizer='adam',  # we used adam during machine learning course\\n\",\r\n    \"              loss='sparse_categorical_crossentropy',  # Multiclass classification loss\\n\",\r\n    \"              metrics=['accuracy'])  # Track accuracy during training\\n\",\r\n    \"print(x.size)\\n\",\r\n    \"print(y.size)\\n\",\r\n    \"training_data = model.fit(x_train,y_train,epochs=50)\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-03-19T15:05:04.908032900Z\",\r\n     \"start_time\": \"2024-03-19T15:04:53.075738800Z\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 70,\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"2/2 [==============================] - 0s 17ms/step - loss: 26.4745 - accuracy: 0.1569\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"result = model.evaluate(x_test,y_test)\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-03-19T15:05:05.266114900Z\",\r\n     \"start_time\": \"2024-03-19T15:05:04.910035100Z\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [],\r\n   \"metadata\": {\r\n    \"collapsed\": false\r\n   }\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 2\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython2\",\r\n   \"version\": \"2.7.6\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 0\r\n}\r\n
===================================================================
diff --git a/main.ipynb b/main.ipynb
--- a/main.ipynb	
+++ b/main.ipynb	
@@ -2,8 +2,17 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 63,
-   "outputs": [],
+   "execution_count": 1,
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "WARNING:tensorflow:From C:\\gesture_recognition_by_image\\venv\\lib\\site-packages\\keras\\src\\losses.py:2976: The name tf.losses.sparse_softmax_cross_entropy is deprecated. Please use tf.compat.v1.losses.sparse_softmax_cross_entropy instead.\n",
+      "\n"
+     ]
+    }
+   ],
    "source": [
     "# import statements\n",
     "import numpy as np\n",
@@ -27,7 +36,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 64,
+   "execution_count": 2,
    "outputs": [
     {
      "name": "stdout",
@@ -82,7 +91,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 65,
+   "execution_count": 3,
    "outputs": [
     {
      "name": "stdout",
@@ -125,7 +134,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 66,
+   "execution_count": 4,
    "outputs": [
     {
      "name": "stdout",
@@ -385,6 +394,198 @@
       "Shape of combined_df: (315, 732)\n",
       "Shape of combined_df: (315, 732)\n",
       "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
+      "Shape of combined_df: (315, 732)\n",
       "Shape of combined_df: (315, 732)\n"
      ]
     }
@@ -449,8 +650,19 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 67,
-   "outputs": [],
+   "execution_count": 5,
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "WARNING:tensorflow:From C:\\gesture_recognition_by_image\\venv\\lib\\site-packages\\keras\\src\\backend.py:873: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n",
+      "\n",
+      "WARNING:tensorflow:From C:\\gesture_recognition_by_image\\venv\\lib\\site-packages\\keras\\src\\backend.py:6642: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n",
+      "\n"
+     ]
+    }
+   ],
    "source": [
     "model = models.Sequential()\n",
     "model.add(layers.Conv1D(64, 3, activation='relu', input_shape=(315,732)))\n",
@@ -473,40 +685,40 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 68,
+   "execution_count": 6,
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Model: \"sequential_6\"\n",
+      "Model: \"sequential\"\n",
       "_________________________________________________________________\n",
       " Layer (type)                Output Shape              Param #   \n",
       "=================================================================\n",
-      " conv1d_18 (Conv1D)          (None, 313, 64)           140608    \n",
+      " conv1d (Conv1D)             (None, 313, 64)           140608    \n",
       "                                                                 \n",
-      " max_pooling1d_12 (MaxPoolin  (None, 156, 64)          0         \n",
-      " g1D)                                                            \n",
+      " max_pooling1d (MaxPooling1  (None, 156, 64)           0         \n",
+      " D)                                                              \n",
       "                                                                 \n",
-      " conv1d_19 (Conv1D)          (None, 154, 128)          24704     \n",
+      " conv1d_1 (Conv1D)           (None, 154, 128)          24704     \n",
       "                                                                 \n",
-      " max_pooling1d_13 (MaxPoolin  (None, 77, 128)          0         \n",
+      " max_pooling1d_1 (MaxPoolin  (None, 77, 128)           0         \n",
       " g1D)                                                            \n",
       "                                                                 \n",
-      " conv1d_20 (Conv1D)          (None, 75, 128)           49280     \n",
+      " conv1d_2 (Conv1D)           (None, 75, 128)           49280     \n",
       "                                                                 \n",
-      " flatten_6 (Flatten)         (None, 9600)              0         \n",
+      " flatten (Flatten)           (None, 9600)              0         \n",
       "                                                                 \n",
-      " dense_18 (Dense)            (None, 128)               1228928   \n",
+      " dense (Dense)               (None, 128)               1228928   \n",
       "                                                                 \n",
-      " dense_19 (Dense)            (None, 64)                8256      \n",
+      " dense_1 (Dense)             (None, 64)                8256      \n",
       "                                                                 \n",
-      " dense_20 (Dense)            (None, 24)                1560      \n",
+      " dense_2 (Dense)             (None, 24)                1560      \n",
       "                                                                 \n",
       "=================================================================\n",
-      "Total params: 1,453,336\n",
-      "Trainable params: 1,453,336\n",
-      "Non-trainable params: 0\n",
+      "Total params: 1453336 (5.54 MB)\n",
+      "Trainable params: 1453336 (5.54 MB)\n",
+      "Non-trainable params: 0 (0.00 Byte)\n",
       "_________________________________________________________________\n"
      ]
     }
@@ -524,114 +736,120 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 69,
+   "execution_count": 7,
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "58797900\n",
-      "255\n",
+      "WARNING:tensorflow:From C:\\gesture_recognition_by_image\\venv\\lib\\site-packages\\keras\\src\\optimizers\\__init__.py:309: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n",
+      "\n",
+      "103069260\n",
+      "447\n",
       "Epoch 1/50\n",
-      "7/7 [==============================] - 1s 33ms/step - loss: 729.7145 - accuracy: 0.0539\n",
+      "WARNING:tensorflow:From C:\\gesture_recognition_by_image\\venv\\lib\\site-packages\\keras\\src\\utils\\tf_utils.py:492: The name tf.ragged.RaggedTensorValue is deprecated. Please use tf.compat.v1.ragged.RaggedTensorValue instead.\n",
+      "\n",
+      "WARNING:tensorflow:From C:\\gesture_recognition_by_image\\venv\\lib\\site-packages\\keras\\src\\engine\\base_layer_utils.py:384: The name tf.executing_eagerly_outside_functions is deprecated. Please use tf.compat.v1.executing_eagerly_outside_functions instead.\n",
+      "\n",
+      "12/12 [==============================] - 14s 218ms/step - loss: 533.9938 - accuracy: 0.0616\n",
       "Epoch 2/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 114.8136 - accuracy: 0.1373\n",
+      "12/12 [==============================] - 4s 360ms/step - loss: 71.5622 - accuracy: 0.1261\n",
       "Epoch 3/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 29.7235 - accuracy: 0.2941\n",
+      "12/12 [==============================] - 4s 305ms/step - loss: 17.2012 - accuracy: 0.1793\n",
       "Epoch 4/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 11.9651 - accuracy: 0.4412\n",
+      "12/12 [==============================] - 5s 393ms/step - loss: 6.2309 - accuracy: 0.2549\n",
       "Epoch 5/50\n",
-      "7/7 [==============================] - 0s 26ms/step - loss: 5.0993 - accuracy: 0.5686\n",
+      "12/12 [==============================] - 4s 345ms/step - loss: 3.5821 - accuracy: 0.3221\n",
       "Epoch 6/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 2.2543 - accuracy: 0.7451\n",
+      "12/12 [==============================] - 2s 165ms/step - loss: 2.1095 - accuracy: 0.3782\n",
       "Epoch 7/50\n",
-      "7/7 [==============================] - 0s 27ms/step - loss: 0.7723 - accuracy: 0.8235\n",
+      "12/12 [==============================] - 2s 169ms/step - loss: 1.7037 - accuracy: 0.4874\n",
       "Epoch 8/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 0.4837 - accuracy: 0.8824\n",
+      "12/12 [==============================] - 2s 152ms/step - loss: 1.5413 - accuracy: 0.5154\n",
       "Epoch 9/50\n",
-      "7/7 [==============================] - 0s 27ms/step - loss: 0.3388 - accuracy: 0.9314\n",
+      "12/12 [==============================] - 2s 147ms/step - loss: 1.4118 - accuracy: 0.5350\n",
       "Epoch 10/50\n",
-      "7/7 [==============================] - 0s 27ms/step - loss: 0.2218 - accuracy: 0.9412\n",
+      "12/12 [==============================] - 2s 151ms/step - loss: 1.3340 - accuracy: 0.5658\n",
       "Epoch 11/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 0.1962 - accuracy: 0.9461\n",
+      "12/12 [==============================] - 2s 164ms/step - loss: 1.2899 - accuracy: 0.5686\n",
       "Epoch 12/50\n",
-      "7/7 [==============================] - 0s 28ms/step - loss: 0.0671 - accuracy: 0.9657\n",
+      "12/12 [==============================] - 2s 181ms/step - loss: 1.2467 - accuracy: 0.5742\n",
       "Epoch 13/50\n",
-      "7/7 [==============================] - 0s 27ms/step - loss: 0.0222 - accuracy: 0.9951\n",
+      "12/12 [==============================] - 2s 167ms/step - loss: 1.2045 - accuracy: 0.5910\n",
       "Epoch 14/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 0.0135 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 153ms/step - loss: 1.1605 - accuracy: 0.6106\n",
       "Epoch 15/50\n",
-      "7/7 [==============================] - 0s 27ms/step - loss: 0.0055 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 183ms/step - loss: 1.1186 - accuracy: 0.6359\n",
       "Epoch 16/50\n",
-      "7/7 [==============================] - 0s 36ms/step - loss: 0.0040 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 152ms/step - loss: 1.1039 - accuracy: 0.6555\n",
       "Epoch 17/50\n",
-      "7/7 [==============================] - 0s 28ms/step - loss: 0.0029 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 183ms/step - loss: 1.1009 - accuracy: 0.6555\n",
       "Epoch 18/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 0.0021 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 171ms/step - loss: 1.0926 - accuracy: 0.6555\n",
       "Epoch 19/50\n",
-      "7/7 [==============================] - 0s 28ms/step - loss: 0.0017 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 3s 223ms/step - loss: 1.0536 - accuracy: 0.6583\n",
       "Epoch 20/50\n",
-      "7/7 [==============================] - 0s 28ms/step - loss: 0.0015 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 3s 228ms/step - loss: 1.0321 - accuracy: 0.6611\n",
       "Epoch 21/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 0.0013 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 131ms/step - loss: 1.0189 - accuracy: 0.6751\n",
       "Epoch 22/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 0.0012 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 195ms/step - loss: 1.0024 - accuracy: 0.6751\n",
       "Epoch 23/50\n",
-      "7/7 [==============================] - 0s 38ms/step - loss: 0.0011 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 139ms/step - loss: 0.9805 - accuracy: 0.6863\n",
       "Epoch 24/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 0.0010 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 175ms/step - loss: 0.9613 - accuracy: 0.6919\n",
       "Epoch 25/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 9.5850e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 144ms/step - loss: 0.9754 - accuracy: 0.6975\n",
       "Epoch 26/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 9.1119e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 3s 240ms/step - loss: 0.9919 - accuracy: 0.6919\n",
       "Epoch 27/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 8.5369e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 210ms/step - loss: 1.2762 - accuracy: 0.6863\n",
       "Epoch 28/50\n",
-      "7/7 [==============================] - 0s 31ms/step - loss: 8.1100e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 210ms/step - loss: 1.0449 - accuracy: 0.6835\n",
       "Epoch 29/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 7.7187e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 197ms/step - loss: 1.0206 - accuracy: 0.6891\n",
       "Epoch 30/50\n",
-      "7/7 [==============================] - 0s 34ms/step - loss: 7.3682e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 3s 259ms/step - loss: 0.9978 - accuracy: 0.7059\n",
       "Epoch 31/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 7.1017e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 3s 257ms/step - loss: 0.9399 - accuracy: 0.7143\n",
       "Epoch 32/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 6.8161e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 200ms/step - loss: 0.9045 - accuracy: 0.7199\n",
       "Epoch 33/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 6.5693e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 174ms/step - loss: 0.8748 - accuracy: 0.7227\n",
       "Epoch 34/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 6.3272e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 188ms/step - loss: 0.8635 - accuracy: 0.7199\n",
       "Epoch 35/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 6.0986e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 3s 238ms/step - loss: 0.8132 - accuracy: 0.7283\n",
       "Epoch 36/50\n",
-      "7/7 [==============================] - 0s 31ms/step - loss: 5.9122e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 193ms/step - loss: 0.7955 - accuracy: 0.7423\n",
       "Epoch 37/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 5.7470e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 169ms/step - loss: 0.7731 - accuracy: 0.7479\n",
       "Epoch 38/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 5.5444e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 144ms/step - loss: 0.7683 - accuracy: 0.7507\n",
       "Epoch 39/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 5.3811e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 165ms/step - loss: 0.7523 - accuracy: 0.7563\n",
       "Epoch 40/50\n",
-      "7/7 [==============================] - 0s 31ms/step - loss: 5.2292e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 155ms/step - loss: 0.7332 - accuracy: 0.7563\n",
       "Epoch 41/50\n",
-      "7/7 [==============================] - 0s 29ms/step - loss: 5.0643e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 171ms/step - loss: 0.7393 - accuracy: 0.7703\n",
       "Epoch 42/50\n",
-      "7/7 [==============================] - 0s 31ms/step - loss: 4.9022e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 159ms/step - loss: 0.7273 - accuracy: 0.7843\n",
       "Epoch 43/50\n",
-      "7/7 [==============================] - 0s 43ms/step - loss: 4.7671e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 144ms/step - loss: 0.7273 - accuracy: 0.7731\n",
       "Epoch 44/50\n",
-      "7/7 [==============================] - 0s 30ms/step - loss: 4.6216e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 147ms/step - loss: 0.7546 - accuracy: 0.7787\n",
       "Epoch 45/50\n",
-      "7/7 [==============================] - 0s 31ms/step - loss: 4.5164e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 154ms/step - loss: 0.9081 - accuracy: 0.7507\n",
       "Epoch 46/50\n",
-      "7/7 [==============================] - 0s 31ms/step - loss: 4.3921e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 140ms/step - loss: 0.9992 - accuracy: 0.7395\n",
       "Epoch 47/50\n",
-      "7/7 [==============================] - 0s 32ms/step - loss: 4.2789e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 148ms/step - loss: 1.0286 - accuracy: 0.7059\n",
       "Epoch 48/50\n",
-      "7/7 [==============================] - 0s 31ms/step - loss: 4.1776e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 149ms/step - loss: 1.0309 - accuracy: 0.7227\n",
       "Epoch 49/50\n",
-      "7/7 [==============================] - 0s 32ms/step - loss: 4.0756e-04 - accuracy: 1.0000\n",
+      "12/12 [==============================] - 2s 143ms/step - loss: 1.1590 - accuracy: 0.7283\n",
       "Epoch 50/50\n",
-      "7/7 [==============================] - 1s 92ms/step - loss: 3.9601e-04 - accuracy: 1.0000\n"
+      "12/12 [==============================] - 2s 158ms/step - loss: 1.1669 - accuracy: 0.7031\n"
      ]
     }
    ],
@@ -653,13 +871,13 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 70,
+   "execution_count": 8,
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "2/2 [==============================] - 0s 17ms/step - loss: 26.4745 - accuracy: 0.1569\n"
+      "3/3 [==============================] - 1s 37ms/step - loss: 16.4642 - accuracy: 0.0889\n"
      ]
     }
    ],
